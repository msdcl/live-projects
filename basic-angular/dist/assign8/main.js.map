{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/my-service.service.ts","webpack:///./src/app/not-found/not-found.component.css","webpack:///./src/app/not-found/not-found.component.html","webpack:///./src/app/not-found/not-found.component.ts","webpack:///./src/app/view1/view1.component.css","webpack:///./src/app/view1/view1.component.html","webpack:///./src/app/view1/view1.component.ts","webpack:///./src/app/view2/view2.component.css","webpack:///./src/app/view2/view2.component.html","webpack:///./src/app/view2/view2.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".title{\\n    font-size: 6vw;\\n    padding-left: 2%;\\n    padding-right: 2%;\\n    font-family: 'EB Garamond', serif;\\n    background-color:#4484CE;\\n}\\n/* .selectOpt{\\n    color: black;\\n    font-size: 3vw;\\n}\\n.option{\\n    background-color: #F19F4D;\\n    font-size: 4.5vw;\\n    padding-left: 2%;\\n}\\n.card{\\n    padding-left: 2%;\\n    margin-top: 3%;\\n    color:black;\\n    margin-bottom: 3%;\\n}\\n.character{\\nborder: 2px solid red;\\n}\\n.book{\\n    border: 2px solid blue;\\n}\\n.house{\\n    border: 2px solid green;\\n} */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row title\\\">\\n    <em>{{title}}</em>\\n  </div>\\n  <!-- <div class=\\\"row option\\\">Select your option to get information :\\n    <select class=\\\"selectOpt\\\" [(ngModel)]=\\\"selectedOption\\\" #i=\\\"ngModel\\\" name=\\\"selectedOption\\\" (change)=\\\"selectChangeHandler($event.target.value)\\\">\\n      <option class=\\\"optionc\\\" *ngFor=\\\"let i of category\\\"  [value]=\\\"i\\\">{{i}}</option>\\n    </select>\\n  </div>\\n  <div class=\\\"row\\\" *ngIf=\\\"allData?.length > 0\\\">\\n    <div *ngFor=\\\"let data of allData\\\" class=\\\"col-sm-12 \\\">\\n      <div *ngIf=\\\"house\\\" class=\\\"card house text-white bg-info mb-3\\\" style=\\\"max-width: 70rem;\\\">\\n        <div class=\\\"card-header\\\">\\n          <b>Name</b> : {{data.name}}</div>\\n        <div class=\\\"card-body\\\">\\n\\n          <p class=\\\"card-text\\\">\\n            <b>Region</b> : {{data.region}}\\n            <br>\\n            <b>CoatOfArms</b> : {{data.coatOfArms}}\\n          </p>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-info\\\" [routerLink]=\\\"['/view2']\\\">Details</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"character\\\" class=\\\"card character text-white bg-info mb-3\\\" style=\\\"max-width: 70rem;\\\">\\n        <div class=\\\"card-header\\\">\\n          <b>Name</b> : {{data.name}}</div>\\n        <div class=\\\"card-body\\\">\\n\\n          <p class=\\\"card-text\\\">\\n            <b>Gender</b> : {{data.gender}}\\n            <br>\\n            <b>Culture</b> : {{data.culture}}\\n          </p>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-info\\\" [routerLink]=\\\"['/view2']\\\" >Details</button>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"book\\\" class=\\\"card book text-white bg-info mb-3\\\" style=\\\"max-width: 70rem;\\\">\\n        <div class=\\\"card-header\\\">\\n          <b>Name</b> : {{data.name}}</div>\\n        <div class=\\\"card-body\\\">\\n          <p class=\\\"card-text\\\">\\n            <b>Authors</b> : {{data.authors}}\\n            <br>\\n            <b>Publisher</b> : {{data.publisher}}\\n            <br>\\n            <b>Released</b> : {{data.released | date}}\\n            <br>\\n            <b>Country</b> : {{data.country}}\\n          </p>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-info\\\" [routerLink]=\\\"['/view2']\\\">Details</button>\\n        </div>\\n      </div>\\n\\n\\n    </div>\\n  </div> -->\\n</div>\\n\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './http.service';\nimport {Router} from '@angular/router';\nimport { MyServiceService } from './my-service.service';\n//import { View1Component } from './view1/view1.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'Angular application : Ice and Fire';\n  // category=['characters','books','houses'];\n  //  public input ='houses';\n  //  public selectedOption:string;\n  //  public allData:any;\n  //  public house:Boolean;\n  //  public book:Boolean;\n  //  public character:Boolean;\n  constructor(public httpService:HttpService,  public router:Router, public mysevice:MyServiceService){\n  //    this.selectedOption='houses';\n     \n  //   this.character=false;\n  //   this.house=true;\n  //   this.book=false;\n  //  this.requestToGetData('houses');\n  }\n\n\n  ngOnInit(){\n    \n  }\n//    requestToGetData(type:string){\n//     // console.log(\"THIS TIME :::: \"+type);\n//     if(type=='houses'){\n//       this.house=true;\n//       this.character=false;\n//       this.book=false;\n//     }else if(type=='books'){\n//       this.book= true;\n//       this.character=false;\n//       this.house=false;\n//     }else{\n//       this.character = true;\n//       this.house=false;\n//       this.book=false;\n//     }\n//     this.allData = this.httpService.getAllData(type).subscribe(\n//       data=>{\n//          console.log(data);\n//          this.allData=data;\n//       },\n//       error =>{\n//         console.log(\"some erroe has occured.\")\n//         console.log(error.errorMessage);\n//       }\n//     );\n//    }\n//   selectChangeHandler(event: any) {\n//     //update the ui\n//     console.log(\"Event is change happen.\");\n//     let givenInput=this.selectedOption ;\n//     console.log(\"Given input is :  \"+givenInput);\n//     this.requestToGetData(givenInput);\n//   // this.httpService.dataArrangement(givenInput);\n//  //  this.router.navigate(['view1/',event]);\n   \n//  //  this.view1.makeRequest();\n//   }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { MyServiceService } from './my-service.service';\nimport { HttpService } from './http.service';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule} from '@angular/forms';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { View2Component } from './view2/view2.component';\nimport { View1Component } from './view1/view1.component';\n//import { View1Component } from './view1/view1.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NotFoundComponent,\n    View2Component,\n    View1Component,\n    //View1Component\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot([\n      {path:\"view2/:type/:id\",component: View2Component},\n      {path :\"view1/:event\", component : View1Component },\n      {path:'' ,redirectTo :'view1/books',pathMatch:'full'},\n      {path :\"**\",component: NotFoundComponent}\n    ])\n  ],\n  providers: [MyServiceService,HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\n\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  public allData;\n  public house: Boolean;\n  public book: Boolean;\n  public character: Boolean;\n  public finalData;\n  public baseUrl = 'https://anapioficeandfire.com/api/';\n\n  constructor(private http_get: HttpClient) {\n    console.log('service constructor is called.');\n  }\n // function to make http get request to get all data of book/character/house one at a time\n  public getAllData(dataType): any {\n    let myResponse = this.http_get.get(this.baseUrl + dataType);\n    this.allData =myResponse;\n   /// console.log(\"all data : \"+this.allData);\n    return myResponse;\n  }\n   \n  // function to make http get request to get data of particular book/character/house\n  public getDataForView(type:string,id:number):any{\n    console.log(\"Hamara url : \"+this.baseUrl +type+'/'+id);\n    let response =this.http_get.get(this.baseUrl +type+'/'+id);\n    return response;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyServiceService {\n\n  constructor() { \n    console.log(\"mysevice is called\");\n  }\n \n}\n","module.exports = \"\"","module.exports = \"<p style=\\\"font-size: 30px; text-align:center\\\" >\\n  <b>Page not found</b>\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".selectOpt{\\n    color: black;\\n    font-size: 3vw;\\n}\\n.option{\\n    background-color: #F19F4D;\\n    font-size: 4.5vw;\\n    padding-left: 2%;\\n}\\n.card{\\n    padding-left: 2%;\\n    margin-top: 3%;\\n    color:black;\\n    margin-bottom: 3%;\\n}\\n.character{\\nborder: 2px solid red;\\n}\\n.book{\\n    border: 2px solid blue;\\n}\\n.house{\\n    border: 2px solid green;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row option\\\">Select your option to get information :\\n        <select class=\\\"selectOpt\\\" [(ngModel)]=\\\"selectedOption\\\" #i=\\\"ngModel\\\" name=\\\"selectedOption\\\" (change)=\\\"selectChangeHandler($event.target.value)\\\">\\n          <option class=\\\"optionc\\\" *ngFor=\\\"let i of category\\\"  [value]=\\\"i\\\">{{i}}</option>\\n        </select>\\n      </div>\\n      <div class=\\\"row\\\" *ngIf=\\\"allData?.length > 0\\\">\\n        <div *ngFor=\\\"let data of allData; let i=index\\\" class=\\\"col-sm-12 \\\">\\n          \\n          <div *ngIf=\\\"house\\\" class=\\\"card house text-white bg-info mb-3\\\" style=\\\"max-width: 70rem;\\\">\\n            <div class=\\\"card-header\\\">\\n              <b>Name</b> : {{data.name}}</div>\\n            <div class=\\\"card-body\\\">\\n    \\n              <p class=\\\"card-text\\\">\\n                <b>Region</b> : {{data.region}}\\n                <br>\\n                <b>CoatOfArms</b> : {{data.coatOfArms}}\\n              </p>\\n            </div>\\n            <div class=\\\"card-footer\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-info\\\" [routerLink]=\\\"['/view2','houses',i+1]\\\" >Details</button>\\n            </div>\\n          </div>\\n    \\n          <div *ngIf=\\\"character\\\" class=\\\"card character text-white bg-info mb-3\\\" style=\\\"max-width: 70rem;\\\">\\n            <div class=\\\"card-header\\\">\\n              <b>Name</b> : {{data.name}}</div>\\n            <div class=\\\"card-body\\\">\\n    \\n              <p class=\\\"card-text\\\">\\n                <b>Gender</b> : {{data.gender}}\\n                <br>\\n                <b>Culture</b> : {{data.culture}}\\n              </p>\\n            </div>\\n            <div class=\\\"card-footer\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-info\\\" [routerLink]=\\\"['/view2','characters',i+1]\\\" >Details</button>\\n            </div>\\n          </div>\\n    \\n          <div *ngIf=\\\"book\\\" class=\\\"card book text-white bg-info mb-3\\\" style=\\\"max-width: 70rem;\\\">\\n            <div class=\\\"card-header\\\">\\n              <b>Name</b> : {{data.name}}</div>\\n            <div class=\\\"card-body\\\">\\n              <p class=\\\"card-text\\\">\\n                <b>Authors</b> : {{data.authors}}\\n                <br>\\n                <b>Publisher</b> : {{data.publisher}}\\n                <br>\\n                <b>Released</b> : {{data.released | date}}\\n                <br>\\n                <b>Country</b> : {{data.country}}\\n              </p>\\n            </div>\\n            <div class=\\\"card-footer\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-info\\\" [routerLink]=\\\"['/view2','books',i+1]\\\">Details</button>\\n            </div>\\n          </div>\\n    \\n    \\n        </div>\\n      </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport {Router} from '@angular/router';\nimport { ActivatedRoute, Route } from '@angular/router';\n\n@Component({\n  selector: 'app-view1',\n  templateUrl: './view1.component.html',\n  styleUrls: ['./view1.component.css']\n})\nexport class View1Component implements OnInit {\n  \n  public selectedOption:string;  // option book/character/house\n  public allData:any;           // all data of a particular option\n  public house:Boolean;\n  public book:Boolean;\n  public character:Boolean;\n  \n  public event:string;\n  category=['characters','books','houses']; // option available\n  constructor(public httpService:HttpService,public router:Router, public route: ActivatedRoute) {\n    this.event = this.route.snapshot.paramMap.get('event');\n    this.selectedOption=this.event;\n    this.character=false;\n    this.house=true;\n    this.book=false;\n   this.requestToGetData(this.selectedOption);\n   }\n\n  ngOnInit() {\n    \n  }\n  \n   // function to get all data of one option book/character/house at time\n  requestToGetData(type:string){\n    // console.log(\"THIS TIME :::: \"+type);\n    if(type=='houses'){\n      this.house=true;\n      this.character=false;\n      this.book=false;\n    }else if(type=='books'){\n      this.book= true;\n      this.character=false;\n      this.house=false;\n    }else{\n      this.character = true;\n      this.house=false;\n      this.book=false;\n    }\n    this.allData = this.httpService.getAllData(type).subscribe(\n      data=>{\n         this.allData=data;\n         console.log(\"view1 all data : \"+this.allData);\n      },\n      error =>{\n        console.log(\"some error has occured.\")\n        console.log(error.errorMessage);\n      }\n    );\n   }\n\n   // function ill trigger whenever an option is selected from dropdown\n  selectChangeHandler(event: any) {\n    //update the ui\n    console.log(\"Event is change happen.\");\n    let givenInput=this.selectedOption ;\n  //  console.log(\"Given input is :  \"+givenInput);\n    this.requestToGetData(givenInput);\n   this.router.navigate(['view1/',event]);   // got to view page\n   \n //  this.view1.makeRequest();\n  }\n}\n","module.exports = \".card{\\n    padding-left: 1%;\\n    margin-top: 3%;\\n    margin-left: 3%;\\n    color:black;\\n    margin-bottom: 3%;\\n    margin-right: 3%;\\n    padding-right: 1%;\\n    \\n}\\n.urls{\\n    padding-left: 2%;\\n    padding-right: 2%;\\n}\\n.character{\\n    border: 2px solid red;\\n    }\\n.book{\\n        border: 2px solid blue;\\n    }\\n.house{\\n        border: 2px solid green;\\n    }\\n.btn{\\n      margin-bottom: 2%;\\n      margin-top:1%;\\n   } \"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\" *ngIf=\\\"currentData\\\">\\n    <div *ngIf='book' class=\\\"card book text-white bg-info mb-3\\\" style=\\\"max-width: 100rem;\\\">\\n      <div class=\\\"card-header\\\">\\n        <b>Url</b> : {{currentData.url}}</div>\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">\\n          <b>Name</b> : {{currentData.name}}</h5>\\n        <p class=\\\"card-text\\\">\\n          <b>isbn</b> : {{currentData.isbn}}\\n          <br>\\n          <b>Authors</b> : {{currentData.authors}}\\n          <br>\\n          <b>NumberOfPages</b> : {{currentData.numberOfPages}}\\n          <br>\\n          <b>Publisher</b> : {{currentData.publisher}}\\n          <br>\\n          <b>Country</b> : {{currentData.country}}\\n          <br>\\n          <b>MediaType</b> : {{currentData.mediaType}}\\n          <br>\\n          <b>Released</b> : {{currentData.released | date}}\\n          <br>\\n          <b>Character's urls </b> :\\n          <br>\\n          <span class=\\\"urls\\\" *ngFor=\\\"let urls of currentData.characters; let last=last\\\">\\n            {{urls}}{{last?'':','}}\\n            <br>\\n          </span>\\n          <b>PovCharacters's urls </b> :\\n          <br>\\n          <span class=\\\"urls\\\" *ngFor=\\\"let urls of currentData.povCharacters; let last=last\\\">\\n            {{urls}}{{last?'':','}}\\n            <br>\\n          </span>\\n        </p>\\n\\n      </div>\\n      <div class=\\\"card-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"goBackFunction()\\\">go back</button>\\n      </div>\\n    </div>\\n    <div *ngIf='character' class=\\\"card character text-white bg-info mb-3\\\" style=\\\"max-width: 100rem;\\\">\\n      <div class=\\\"card-header\\\">\\n        <b>Url</b> : {{currentData.url}}</div>\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">\\n          <b>Name</b> : {{currentData.name}}</h5>\\n        <p class=\\\"card-text\\\">\\n          <b>Gender</b> : {{currentData.gender}}\\n          <br>\\n          <b>Culture</b> : {{currentData.culture}}\\n          <br>\\n          <b>Born</b> : {{currentData.born}}\\n          <br>\\n          <b>Died</b> : {{currentData.died}}\\n          <br>\\n          <b>Titles</b> :<br>\\n          <span class=\\\"urls\\\" *ngFor=\\\"let title of currentData.titles; let last=last\\\">\\n            {{title}}{{last?'':','}}\\n            <br>\\n          </span>\\n          <br>\\n          <b>Aliases</b> : <br>\\n          <span class=\\\"title\\\" *ngFor=\\\"let title of currentData.aliases; let last=last\\\"> \\n            {{title}}{{last?'':','}}\\n          <br>\\n          </span>\\n          <br>\\n          <b>Father</b> : {{currentData.father}}\\n          <br>\\n          <b>Mother</b> : {{currentData.mother}}\\n          <br>\\n          <b>Spouse</b> : {{currentData.spouse}}\\n          <br>\\n          <b>Allegiances</b> :\\n          <br>\\n          <span class=\\\"urls\\\" *ngFor=\\\"let urls of currentData.allegiances; let last=last\\\">\\n            {{urls}}{{last?'':','}}\\n            <br>\\n          </span><br>\\n          <b>Books's urls for character</b> :\\n          <br>\\n          <span class=\\\"urls\\\" *ngFor=\\\"let urls of currentData.books; let last=last\\\">\\n            {{urls}}{{last?'':','}}\\n            <br>\\n          </span><br>\\n          <b>Povbooks's urls for character</b> :<br>\\n          <span class=\\\"urls\\\" *ngFor=\\\"let urls of currentData.povBooks; let last=last\\\">\\n              {{urls}}{{last?'':','}}\\n              <br>\\n            </span><br>\\n            <b>TvSeries</b> :<br>\\n          <span class=\\\"urls\\\" *ngFor=\\\"let urls of currentData.tvSeries; let last=last\\\">\\n              {{urls}}{{last?'':','}}\\n              <br>\\n            </span><br>\\n            <b>PlayedBy</b> :\\n            <span class=\\\"urls\\\" *ngFor=\\\"let urls of currentData.playedBy; let last=last\\\">\\n                {{urls}}{{last?'':','}}\\n                <br>\\n              </span>\\n        </p>\\n\\n      </div>\\n      <div class=\\\"card-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"goBackFunction()\\\">go back</button>\\n      </div>\\n    </div>\\n    <div *ngIf='house' class=\\\"card house text-white bg-info mb-3\\\" style=\\\"max-width: 100rem;\\\">\\n      <div class=\\\"card-header\\\">\\n        <b>Url</b> : {{currentData.url}}</div>\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">\\n          <b>Name</b> : {{currentData.name}}</h5>\\n        <p class=\\\"card-text\\\">\\n          <b>Region</b> : {{currentData.region}}\\n          <br>\\n          <b>CoatOfArms</b> : {{currentData.coatOfArms}}\\n          <br>\\n          <b>Words</b> : {{currentData.words}}\\n          <br>\\n          <b>Titles</b> :<br>\\n          <span class=\\\"urls\\\" *ngFor=\\\"let title of currentData.titles; let last=last\\\">\\n            {{title}}{{last?'':','}}\\n            <br>\\n          </span>\\n          <br>\\n          <b>Seats</b> :<br>\\n          <span class=\\\"urls\\\" *ngFor=\\\"let seat of currentData.seats; let last=last\\\">\\n            {{seat}}{{last?'':','}}\\n            <br>\\n          </span>\\n          <br>\\n          <b>CurrentLord</b> : {{currentData.currentLord}}\\n          <br>\\n          <b>Heir</b> : {{currentData.heir}}\\n          <br>\\n          <b>OverLord</b> : {{currentData.overLord}}\\n          <br>\\n          <b>Founded</b> : {{currentData.founded}}\\n          <br>\\n          <b>Founder</b> : {{currentData.founder}}\\n          <br>\\n          <b>DiedOut</b> : {{currentData.diedOut}}\\n          <br>\\n          <b>AncestralWeapons </b> : <br>\\n          <span class=\\\"urls\\\" *ngFor=\\\"let weapon of currentData.ancestralWeapons; let last=last\\\">\\n            {{weapon}}{{last?'':','}}\\n            <br>\\n          </span>\\n          <b>CadetBranches </b> :<br>\\n          <span class=\\\"urls\\\" *ngFor=\\\"let branch of currentData.cadetBranches; let last=last\\\">\\n            {{branch}}{{last?'':','}}\\n            <br>\\n          </span>\\n          <br>\\n          <b>SwornMembers</b>:<br>\\n          <span class=\\\"urls\\\" *ngFor=\\\"let member of currentData.swornMembers; let last=last\\\">\\n            {{member}}{{last?'':','}}\\n            <br>\\n          </span>\\n        </p>\\n\\n      </div>\\n      <div class=\\\"card-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"goBackFunction()\\\">go back</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute, Route } from '@angular/router';\nimport {Location} from '@angular/common';\n\n@Component({\n  selector: 'app-view2',\n  templateUrl: './view2.component.html',\n  styleUrls: ['./view2.component.css'],\n  providers :[Location]\n})\nexport class View2Component implements OnInit {\n\n  public currentId: number;// current id of book/character/house\n  public allData;\n  public currentData: any;  // data of particular book/character/house\n  public type: string;      // book/character/house\n  public house:Boolean;     // check for type\n  public book:Boolean;\n  public character:Boolean;\n  constructor(public http: HttpService, public route: ActivatedRoute, public router: Router,private location:Location) {\n    this.character=false;\n    this.house=true;\n    this.book=false;\n  }\n\n  ngOnInit() {\n    this.currentId = Number(this.route.snapshot.paramMap.get('id'));\n    this.type = this.route.snapshot.paramMap.get('type');\n    if(this.type=='houses'){\n      this.house=true;\n      this.character=false;\n      this.book=false;\n    }else if(this.type=='books'){\n      this.book= true;\n      this.character=false;\n      this.house=false;\n    }else{\n      this.character = true;\n      this.house=false;\n      this.book=false;\n    }\n    console.log(\"this time id : \" + this.currentId);\n    this.func(this.currentId, this.type);   \n  }\n\n  // function to get data of particular book/character/house\n  public func(id: number, type: string): any {\n    this.currentData = this.http.getDataForView(this.type, this.currentId).subscribe(\n      data => {\n       console.log(data);\n        this.currentData = data;\n       \n      },\n      error => {\n        console.log(\"some error has occured.\")\n        console.log(error.errorMessage);\n      }\n    );\n    console.log(this.currentData);\n  }\n\n\n  // function to go back to previous page\n  public goBackFunction():any{\n    return this.location.back();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}